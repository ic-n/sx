// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: commitreveal/v1/api.proto

package commitrevealv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{0}
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CreatePollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choice_1 string `protobuf:"bytes,1,opt,name=choice_1,json=choice1,proto3" json:"choice_1,omitempty"`
	Choice_2 string `protobuf:"bytes,2,opt,name=choice_2,json=choice2,proto3" json:"choice_2,omitempty"`
	Seconds  int64  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *CreatePollRequest) Reset() {
	*x = CreatePollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollRequest) ProtoMessage() {}

func (x *CreatePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollRequest.ProtoReflect.Descriptor instead.
func (*CreatePollRequest) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePollRequest) GetChoice_1() string {
	if x != nil {
		return x.Choice_1
	}
	return ""
}

func (x *CreatePollRequest) GetChoice_2() string {
	if x != nil {
		return x.Choice_2
	}
	return ""
}

func (x *CreatePollRequest) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type CreatePollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CreatePollResponse) Reset() {
	*x = CreatePollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollResponse) ProtoMessage() {}

func (x *CreatePollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollResponse.ProtoReflect.Descriptor instead.
func (*CreatePollResponse) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePollResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetPollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetPollRequest) Reset() {
	*x = GetPollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPollRequest) ProtoMessage() {}

func (x *GetPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPollRequest.ProtoReflect.Descriptor instead.
func (*GetPollRequest) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetPollRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetPollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecondsLeft int64  `protobuf:"varint,1,opt,name=seconds_left,json=secondsLeft,proto3" json:"seconds_left,omitempty"`
	Choice_1    string `protobuf:"bytes,2,opt,name=choice_1,json=choice1,proto3" json:"choice_1,omitempty"`
	Choice_2    string `protobuf:"bytes,3,opt,name=choice_2,json=choice2,proto3" json:"choice_2,omitempty"`
	Count_1     int64  `protobuf:"varint,4,opt,name=count_1,json=count1,proto3" json:"count_1,omitempty"`
	Count_2     int64  `protobuf:"varint,5,opt,name=count_2,json=count2,proto3" json:"count_2,omitempty"`
}

func (x *GetPollResponse) Reset() {
	*x = GetPollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPollResponse) ProtoMessage() {}

func (x *GetPollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPollResponse.ProtoReflect.Descriptor instead.
func (*GetPollResponse) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetPollResponse) GetSecondsLeft() int64 {
	if x != nil {
		return x.SecondsLeft
	}
	return 0
}

func (x *GetPollResponse) GetChoice_1() string {
	if x != nil {
		return x.Choice_1
	}
	return ""
}

func (x *GetPollResponse) GetChoice_2() string {
	if x != nil {
		return x.Choice_2
	}
	return ""
}

func (x *GetPollResponse) GetCount_1() int64 {
	if x != nil {
		return x.Count_1
	}
	return 0
}

func (x *GetPollResponse) GetCount_2() int64 {
	if x != nil {
		return x.Count_2
	}
	return 0
}

type CommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Secret  string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *CommitRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CommitRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type CommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CommitResponse) Reset() {
	*x = CommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResponse) ProtoMessage() {}

func (x *CommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResponse.ProtoReflect.Descriptor instead.
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *CommitResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RevealRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Secret  string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *RevealRequest) Reset() {
	*x = RevealRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevealRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevealRequest) ProtoMessage() {}

func (x *RevealRequest) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevealRequest.ProtoReflect.Descriptor instead.
func (*RevealRequest) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{8}
}

func (x *RevealRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RevealRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type RevealResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *RevealResponse) Reset() {
	*x = RevealResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commitreveal_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevealResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevealResponse) ProtoMessage() {}

func (x *RevealResponse) ProtoReflect() protoreflect.Message {
	mi := &file_commitreveal_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevealResponse.ProtoReflect.Descriptor instead.
func (*RevealResponse) Descriptor() ([]byte, []int) {
	return file_commitreveal_v1_api_proto_rawDescGZIP(), []int{9}
}

func (x *RevealResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_commitreveal_v1_api_proto protoreflect.FileDescriptor

var file_commitreveal_v1_api_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x63, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x31, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x9c,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x31,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x31, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x22, 0x41, 0x0a,
	0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x22, 0x20, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x22, 0x41, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x32, 0xfb, 0x03, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5d, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x67,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x22, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22, 0x08, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x6c, 0x12, 0x5e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x6c, 0x12, 0x5d, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x5d, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c,
	0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x76, 0x65, 0x61, 0x6c, 0x42, 0xb3, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x41,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x63, 0x2d, 0x6e, 0x2f, 0x73, 0x78, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x2f, 0x76,
	0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x72,
	0x65, 0x76, 0x65, 0x61, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_commitreveal_v1_api_proto_rawDescOnce sync.Once
	file_commitreveal_v1_api_proto_rawDescData = file_commitreveal_v1_api_proto_rawDesc
)

func file_commitreveal_v1_api_proto_rawDescGZIP() []byte {
	file_commitreveal_v1_api_proto_rawDescOnce.Do(func() {
		file_commitreveal_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_commitreveal_v1_api_proto_rawDescData)
	})
	return file_commitreveal_v1_api_proto_rawDescData
}

var file_commitreveal_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_commitreveal_v1_api_proto_goTypes = []interface{}{
	(*HealthRequest)(nil),      // 0: commitreveal.v1.HealthRequest
	(*HealthResponse)(nil),     // 1: commitreveal.v1.HealthResponse
	(*CreatePollRequest)(nil),  // 2: commitreveal.v1.CreatePollRequest
	(*CreatePollResponse)(nil), // 3: commitreveal.v1.CreatePollResponse
	(*GetPollRequest)(nil),     // 4: commitreveal.v1.GetPollRequest
	(*GetPollResponse)(nil),    // 5: commitreveal.v1.GetPollResponse
	(*CommitRequest)(nil),      // 6: commitreveal.v1.CommitRequest
	(*CommitResponse)(nil),     // 7: commitreveal.v1.CommitResponse
	(*RevealRequest)(nil),      // 8: commitreveal.v1.RevealRequest
	(*RevealResponse)(nil),     // 9: commitreveal.v1.RevealResponse
}
var file_commitreveal_v1_api_proto_depIdxs = []int32{
	0, // 0: commitreveal.v1.CommitRevealService.Health:input_type -> commitreveal.v1.HealthRequest
	2, // 1: commitreveal.v1.CommitRevealService.CreatePoll:input_type -> commitreveal.v1.CreatePollRequest
	4, // 2: commitreveal.v1.CommitRevealService.GetPoll:input_type -> commitreveal.v1.GetPollRequest
	6, // 3: commitreveal.v1.CommitRevealService.Commit:input_type -> commitreveal.v1.CommitRequest
	8, // 4: commitreveal.v1.CommitRevealService.Reveal:input_type -> commitreveal.v1.RevealRequest
	1, // 5: commitreveal.v1.CommitRevealService.Health:output_type -> commitreveal.v1.HealthResponse
	3, // 6: commitreveal.v1.CommitRevealService.CreatePoll:output_type -> commitreveal.v1.CreatePollResponse
	5, // 7: commitreveal.v1.CommitRevealService.GetPoll:output_type -> commitreveal.v1.GetPollResponse
	7, // 8: commitreveal.v1.CommitRevealService.Commit:output_type -> commitreveal.v1.CommitResponse
	9, // 9: commitreveal.v1.CommitRevealService.Reveal:output_type -> commitreveal.v1.RevealResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_commitreveal_v1_api_proto_init() }
func file_commitreveal_v1_api_proto_init() {
	if File_commitreveal_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_commitreveal_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commitreveal_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commitreveal_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commitreveal_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commitreveal_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commitreveal_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commitreveal_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commitreveal_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commitreveal_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevealRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commitreveal_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevealResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commitreveal_v1_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commitreveal_v1_api_proto_goTypes,
		DependencyIndexes: file_commitreveal_v1_api_proto_depIdxs,
		MessageInfos:      file_commitreveal_v1_api_proto_msgTypes,
	}.Build()
	File_commitreveal_v1_api_proto = out.File
	file_commitreveal_v1_api_proto_rawDesc = nil
	file_commitreveal_v1_api_proto_goTypes = nil
	file_commitreveal_v1_api_proto_depIdxs = nil
}
